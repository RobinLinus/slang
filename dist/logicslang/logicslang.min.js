"use strict";window.Slang=window.Slang||{},window.Slang.logicslang={compare:function(r,n,t,i){if("object"==typeof n)for(var e in n){var a=new RegExp("@"+e,"g");r=r.replace(a,n[e])}var o=new LogicParser(t);return o.compare(r,n,i)}};var LogicParser=function(r){function n(r){var n=[];return n=r.split(/(#and|#or|#not|<&|&|<|>)/),n=n.map(function(r){return r.trim()}),n=n.filter(function(r){return r.length>0})}function t(){if("#not"==e[0])return e.shift(),!i();var r=i();if("#and"===e[0]||"#or"===e[0]){var n=e.shift(),t=i();return"#and"===n?r&&t:r||t}return r}function i(){var n=e.shift(),i="";if("<"==n){i=t();var u=e.shift();if(">"!=u)throw f;return i}if("<&"==n){var c=a;a=e.shift();var s=e.shift();if("&"!=s)throw f;i=t();var u=e.shift();if(">"!=u)throw f;return a=c,i}if(">"==n)throw f;return r(n,a,o)}var e=[],a="",o=void 0,f="ERROR: Mismatched parentheses";this.compare=function(r,i,f){return e=n(r),a=i,o=f,t()}};